version: "3"

services:
    # --------- Backend services ---------
    db:
        image: postgres:latest
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - "5432"
        restart: always
        networks:
            - backend
    redis:
        image: redis:latest
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - "6379"
        restart: always
        networks:
            - backend
    api:
        build:
            context: src/api
            dockerfile: dev.Dockerfile
        ports:
            - "4000"
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - SERVER_SECRET=${SERVER_SECRET}
            - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
            - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
            - STRIPE_SECRET_TEST=${STRIPE_SECRET_TEST}
            - STRIPE_WEBOOK_SIGNING_SECRET_PURCHASE=${STRIPE_WEBOOK_SIGNING_SECRET_PURCHASE}
            - FRONTEND_URL=${FRONTEND_URL}
            - BACKEND_URL=${BACKEND_URL}
            - NODE_ENV=${NODE_ENV}
        depends_on:
            - db
            - redis
        volumes:
            - ./src/api:/usr/app
        restart: always
        networks:
            - backend
    apphandler:
        build:
            context: src/apphandler
            dockerfile: dev.Dockerfile
        ports:
            - "5000"
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        depends_on:
            - db
            - api
        volumes:
            - ./src/apphandler:/usr/app
            - /var/run/docker.sock:/var/run/docker.sock
            - /usr/bin/docker:/usr/bin/docker
        restart: always
        networks: # Can't access localhost with this config - PROBLEM
            - backend
    nginx:
        build:
            context: src/nginx
            dockerfile: dev.Dockerfile
        ports:
            - "8000:80"
        depends_on:
            - api
            - apphandler
        volumes:
            - ./src/nginx:/etc/nginx/conf.d
        restart: always
        networks:
            - backend
    # --------- Frontend services ---------
    frontend:
        build:
            context: src/frontend
            dockerfile: dev.Dockerfile
        depends_on:
            - nginx
        volumes:
            - ./src/frontend:/usr/app
        restart: always
        network_mode: "host"
        environment:
            - BACKEND_URL=${BACKEND_URL}
            - NODE_ENV=${NODE_ENV}

networks:
    backend:
