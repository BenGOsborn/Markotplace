version: "3"

services:
    db:
        image: postgres:latest
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - "5432"
        restart: always
        networks:
            - backend
    redis:
        image: redis:latest
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - "6379"
        restart: always
        networks:
            - backend
    api:
        build: src/api/
        ports:
            - "4000"
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - SERVER_SECRET=${SERVER_SECRET}
            - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
            - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
            - STRIPE_SECRET=${STRIPE_SECRET}
            - STRIPE_SECRET_TEST=${STRIPE_SECRET_TEST}
            - STRIPE_WEBOOK_SECRET_PURCHASE=${STRIPE_WEBOOK_SECRET_PURCHASE}
            - SITE_URL=${SITE_URL}
            - ENVIRONMENT=${ENVIRONMENT}
            - NODE_ENV=${NODE_ENV}
        depends_on:
            - db
            - redis
            - appbuilder
        restart: always
        networks:
            - backend

networks:
    frontend:
        driver: custom-driver-1
    backend:
        driver: custom-driver-2
# appbuilder:
#     build: src/appbuilder/
#     ports:
#         - "3000"
#     environment:
#         - POSTGRES_HOST=${POSTGRES_HOST}
#         - POSTGRES_USER=${POSTGRES_USER}
#         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#         - POSTGRES_DB=${POSTGRES_DB}
#         - ENVIRONMENT=${ENVIRONMENT}
#     volumes:
#         - /var/run/docker.sock:/var/run/docker.sock
#         - /usr/bin/docker:/usr/bin/docker
#     depends_on:
#         - db
#     restart: always
#     networks:
#         - backend
# appmanager:
#     build: src/appmanager/
#     ports:
#         - "5000"
#     environment:
#         - CONTAINER_PREFIX=${CONTAINER_PREFIX}
#         - ENVIRONMENT=${ENVIRONMENT}
#     volumes:
#         - /var/run/docker.sock:/var/run/docker.sock
#         - /usr/bin/docker:/usr/bin/docker
#     depends_on:
#         - api
#     restart: always
#     networks:
#         - backend
# nginx:
#     build: src/nginx/
#     ports:
#         - "8000:80"
#     depends_on:
#         - appbuilder
#         - api
#         - appmanager
#     restart: always
#     networks:
#         - backend
