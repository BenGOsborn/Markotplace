version: "3"

services:
    # --------- Backend services ---------
    api:
        build:
            context: ../src/api
            dockerfile: build.Dockerfile
        ports:
            - "4000"
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
            - SERVER_SECRET=${SERVER_SECRET}
            - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
            - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
            - STRIPE_SECRET=${STRIPE_SECRET}
            - STRIPE_WEBOOK_SIGNING_SECRET_PURCHASE=${STRIPE_WEBOOK_SIGNING_SECRET_PURCHASE}
            - FRONTEND_URL=${FRONTEND_URL}
            - BACKEND_URL=${BACKEND_URL}
            - NODE_ENV=${NODE_ENV}
        restart: always
        networks:
            - backend
    apphandler:
        build:
            context: ../src/apphandler
            dockerfile: build.Dockerfile
        ports:
            - "5000"
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - BACKEND_URL=${BACKEND_URL}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /usr/bin/docker:/usr/bin/docker
        restart: always
        networks:
            - backend
    nginx_backend:
        build:
            context: ../src/nginx_backend
        ports:
            - "8000:80"
        depends_on:
            - api
            - apphandler
        restart: always
        networks:
            - backend
    # --------- Frontend services ---------
    frontend:
        build:
            context: ../src/frontend
            dockerfile: build.Dockerfile
        ports:
            - "3000"
        restart: always
        environment:
            - BACKEND_URL=${BACKEND_URL}
            - NODE_ENV=${NODE_ENV}
        networks:
            - frontend
    nginx_frontend:
        build:
            context: ../src/nginx_frontend
        depends_on:
            - frontend
        ports:
            - "80:80"
        restart: always
        networks:
            - frontend
    # --------- Misc services ---------
    certbot:
        image: certbot/certbot:latest

networks:
    backend:
    frontend:
